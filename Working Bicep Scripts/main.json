{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.14.46.61228",
      "templateHash": "14394724950852294158"
    }
  },
  "parameters": {
    "Keyvaultname": {
      "type": "string",
      "defaultValue": "Virkvdev-mms"
    },
    "vmssName": {
      "type": "string",
      "defaultValue": "rianest"
    },
    "location": {
      "type": "string",
      "defaultValue": "southeastasia"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[parameters('vmssName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "adminPasswordkv": {
            "reference": {
              "keyVault": {
                "id": "[resourceId('Microsoft.KeyVault/vaults', parameters('Keyvaultname'))]"
              },
              "secretName": "virtualm"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.14.46.61228",
              "templateHash": "8685122083002015664"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "southeastasia",
              "allowedValues": [
                "brazilsouth",
                "canadacentral",
                "centralus",
                "eastus",
                "eastus2",
                "southcentralus",
                "francecentral",
                "germanywestcentral",
                "northeurope",
                "uksouth",
                "westeurope",
                "southafricanorth",
                "australiaeast",
                "centralindia",
                "japaneast",
                "koreacentral",
                "southeastasia",
                "usgovvirginia",
                "westus2",
                "westus3"
              ],
              "metadata": {
                "description": "Location for the VM, only certain regions support Availability Zones"
              }
            },
            "adminUsername": {
              "type": "string",
              "defaultValue": "romanrian",
              "metadata": {
                "description": "Admin username on all VMs."
              }
            },
            "adminPasswordkv": {
              "type": "securestring",
              "metadata": {
                "description": "Admin password on all VMs."
              }
            },
            "windowsOSVersion": {
              "type": "string",
              "defaultValue": "2016-Datacenter",
              "allowedValues": [
                "2008-R2-SP1",
                "2012-Datacenter",
                "2012-R2-Datacenter",
                "2016-Nano-Server",
                "2016-Datacenter-with-Containers",
                "2016-Datacenter"
              ],
              "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
              }
            },
            "vmssName": {
              "type": "string",
              "defaultValue": "rianest",
              "maxLength": 61,
              "metadata": {
                "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
              }
            },
            "instanceCount": {
              "type": "int",
              "defaultValue": 3,
              "maxValue": 100,
              "minValue": 1,
              "metadata": {
                "description": "Number of VM instances (100 or less)."
              }
            }
          },
          "variables": {
            "networkSecurityGroupName": "allowRemoting",
            "virtualNetworkName": "[format('{0}vnet', parameters('vmssName'))]",
            "publicIPAddressName": "[format('{0}pip', parameters('vmssName'))]",
            "subnetName": "[format('{0}subnet', parameters('vmssName'))]",
            "loadBalancerName": "[format('{0}lb', parameters('vmssName'))]",
            "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
            "natPoolName": "[format('{0}natpool', parameters('vmssName'))]",
            "bePoolName": "[format('{0}bepool', parameters('vmssName'))]",
            "nicName": "[format('{0}nic', parameters('vmssName'))]",
            "ipConfigName": "[format('{0}ipconfig', parameters('vmssName'))]",
            "frontEndIPConfigID": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('loadBalancerName'), 'loadBalancerFrontEnd')]",
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "[parameters('windowsOSVersion')]",
              "version": "latest"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-11-01",
              "name": "[variables('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "10.0.0.0/16"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('subnetName')]",
                    "properties": {
                      "addressPrefix": "10.0.0.0/24"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2020-11-01",
              "name": "[variables('networkSecurityGroupName')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "remoteConnection",
                    "properties": {
                      "description": "Allow RDP traffic",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "3389",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 101,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "webTraffic",
                    "properties": {
                      "description": "Allow web traffic",
                      "protocol": "Tcp",
                      "sourcePortRange": "80",
                      "destinationPortRange": "80",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-11-01",
              "name": "[variables('publicIPAddressName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                  "domainNameLabel": "[parameters('vmssName')]"
                }
              }
            },
            {
              "type": "Microsoft.Network/loadBalancers",
              "apiVersion": "2020-11-01",
              "name": "[variables('loadBalancerName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "frontendIPConfigurations": [
                  {
                    "name": "LoadBalancerFrontEnd",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[variables('publicIPAddressID')]"
                      }
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "[variables('bePoolName')]"
                  }
                ],
                "inboundNatPools": [
                  {
                    "name": "[variables('natPoolName')]",
                    "properties": {
                      "frontendIPConfiguration": {
                        "id": "[variables('frontEndIPConfigID')]"
                      },
                      "protocol": "Tcp",
                      "frontendPortRangeStart": 50000,
                      "frontendPortRangeEnd": 50099,
                      "backendPort": 3389
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachineScaleSets",
              "apiVersion": "2020-12-01",
              "name": "[parameters('vmssName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_A1_v2",
                "tier": "Standard",
                "capacity": "[parameters('instanceCount')]"
              },
              "zones": [
                "1"
              ],
              "properties": {
                "overprovision": true,
                "upgradePolicy": {
                  "mode": "Manual"
                },
                "virtualMachineProfile": {
                  "storageProfile": {
                    "osDisk": {
                      "caching": "ReadWrite",
                      "createOption": "FromImage"
                    },
                    "imageReference": "[variables('imageReference')]"
                  },
                  "osProfile": {
                    "computerNamePrefix": "[parameters('vmssName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordkv')]"
                  },
                  "networkProfile": {
                    "networkInterfaceConfigurations": [
                      {
                        "name": "[variables('nicName')]",
                        "properties": {
                          "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                          },
                          "primary": true,
                          "ipConfigurations": [
                            {
                              "name": "[variables('ipConfigName')]",
                              "properties": {
                                "subnet": {
                                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                                },
                                "loadBalancerBackendAddressPools": [
                                  {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), variables('bePoolName'))]"
                                  }
                                ],
                                "loadBalancerInboundNatPools": [
                                  {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools', variables('loadBalancerName'), variables('natPoolName'))]"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
              ]
            }
          ]
        }
      }
    }
  ]
}